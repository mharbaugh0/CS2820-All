title WARP Sequence Diagram

participant Warp
participant WorkLoad
participant SystemFactory
participant WarpInterface
participant ChannelVisualization

Warp -> Warp:set WARP system parameters
Warp -> WorkLoad: Create WorkLoad\n(numFaults, minLQ, e2e, inputFile)

alt allRequested
loop for each WorkLoadChoices
    WorkLoad -> WorkLoad: visualize(WorkLoad, choice)
    end
    WorkLoad -> SystemFactory: Create Warp System
    alt schedulerRequested
        SystemFactory -> WarpInterface: create(workLoad, nChannels, schedulerSelected)
        WarpInterface -> WarpInterface: verifyPerformanceRequirements(warp)
        loop for each SystemChoices
            WarpInterface -> WarpInterface: visualize(warp, choice)
WarpInterface->ChannelVisualization:choice case Channel
        end
    end
    alt for each ScheduleChoices
        SystemFactory -> WarpInterface: create(workLoad, nChannels, schedulerSelected)
        WarpInterface -> WarpInterface: verifyPerformanceRequirements(warp)
        loop for each SystemChoices
            WarpInterface -> WarpInterface: visualize(warp, choice)
WarpInterface->ChannelVisualization:choice case Channel
        end
    end
end

alt else
    Warp -> Warp: visualize(workLoad, WorkLoadChoices.INPUT_GRAPH)
    alt wfRequested
       WorkLoad -> Warp: visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH)
    end
    alt gvRequested
    WorkLoad -> Warp: visualize(workLoad, WorkLoadChoices.GRAPHVIZ)
    end
    WorkLoad -> SystemFactory: Create and visualize Warp System
    SystemFactory -> WarpInterface: create(workLoad, nChannels, schedulerSelected)
    WarpInterface -> WarpInterface: verifyPerformanceRequirements(warp)
    WorkLoad -> WarpInterface: visualize(warp, SystemChoices.SOURCE)
    alt caRequested then
        WorkLoad -> WarpInterface: visualize(warp, SystemChoices.CHANNEL)
    end
    alt laRequested then
        WorkLoad -> WarpInterface: visualize(warp, SystemChoices.LATENCY)
    end
    alt latencyRequested or laRequested then
        WorkLoad -> WarpInterface: visualize(warp, SystemChoices.LATENCY_REPORT)
    end
    alt raRequested then
        WorkLoad -> WarpInterface: visualize(warp, SystemChoices.RELIABILITIES)
    end
end
